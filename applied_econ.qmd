---
title: "{{< fa flask >}} **Econom√©trie Appliqu√©e**"
title-block-banner: imgs/apples.png
subtitle: "Des üçè sur {{< fa brands r-project >}} !"
toc: true
toc-title: üìö Table des mati√®res
lang: fr
number-sections: true
author:
  - name: "{{< fa brands github >}} [*Corentin Ducloux*](https://github.com/CDucloux)"
    affiliation: 
      - name: Universit√© de Tours
        url: https://www.univ-tours.fr/
  - name: "{{< fa brands github >}} [*Guillaume Devant*](https://github.com/devgui37)"
    affiliation: 
      - name: Universit√© de Tours
        url: https://www.univ-tours.fr/
date: today
date-format: short
include-in-header: 
    - text: | 
        <link href='https://fonts.googleapis.com/css?family=Fira Code' rel='stylesheet'>
format:
    html:
        theme: simplex
        monofont: "Fira Code"
        fontsize: 1em
        embed-resources: true
        html-math-method: mathjax
        code-fold: true 
        anchor-sections: true
        smooth-scroll: true
        citations-hover: true
        footnotes-hover: true
        link-external-icon: true
        link-external-newwindow: true
code-block-bg: "#F1F3F5"
code-block-border-left: "#d9230f"
license: "CC BY-SA"
bibliography: references.bib
crossref:
    eq-prefix: √©quation
    tbl-prefix: Tableau
editor_options: 
    chunk_output_type: console
---

```{css, echo=FALSE}
.img-block {
    margin: auto;
    width: 85%;
    padding: 10px;
    text-align: center;
}
.img-block img {
    display: inline-block;
    margin: auto;
    max-width: 100%;
}
.title {
    color: white;
}
.subtitle {
    color: white;
}
```

***

:::{.img-block}
<br>
<img src="imgs/MECEN_logo.png" alt="MECEN Logo" style="width: 30%;">
<img src="imgs/UT_logo.jpg" alt="UT Logo" style="width: 45%;">

:::

***

```{r}
#| label: functions
#| echo: false

source("R/custom_functions.R")
```

## Introduction

Ce document repr√©sente une √©tude √©conom√©trique et statistique effectu√©e dans le contexte de notre cours d'√©conom√©trie appliqu√©e dispens√© par le [**Pr. Alain BOUSQUET**](https://scholar.google.fr/citations?user=TJAp2fgAAAAJ&hl=fr). Son objectif est de condenser et d'expliquer les r√©sultats les plus significatifs obtenus au cours de notre analyse. Notons que de nombreux r√©sultats qui n'√©taient pas explicitement demand√©s dans les questions ont √©t√© inclus, car nous avons estim√© qu'ils contribuaient √† enrichir nos explications et √† fournir un contexte plus complet.

## Imports et configuration

:::{.callout-note}

Tout au long de ce projet, nous utiliserons l'approche [`tidy`](https://www.tidyverse.org/) d√©velopp√©e par @wickham2014 plut√¥t que l'approche `base R` pour manipuler nos donn√©es. De plus, l'utilisation du package `micEcon` et de ses annexes nous facilitera grandement le travail d'estimation -- voir @henningsen2017.

:::

```{r}
#| label: lib_imports
#| warning: false
#| code-fold: false
library(ggplot2)
library(dplyr)
library(tidyr)
library(gt)
library(tibble)
library(patchwork)
library(FactoMineR)
library(factoextra)
library(ggtext)
library(micEcon)
library(micEconSNQP)
library(micEconIndex)
library(micEconCES)
library(frontier)
library(ranger)
library(tuneRanger)
library(mlr)
library(rsample)
library(forcats)
library(performance)
```

```{r}
#| label: colors
#| echo: false
bg_color <- "#FCFCFC"
alpha <- 0.7
```

```{r}
#| label: theming
#| echo: false
theme_set(theme_minimal())
thematic::thematic_on(bg = "#FCFCFC", fg = "black", accent = "purple", font = "PT Sans")
```

## Description des donn√©es

Le jeu de donn√©es `appleProdFr86` utilis√© dans le papier d'√©conom√©trie de @ivaldi1996 comprend des donn√©es transversales de production de **140** producteurs de pommes fran√ßais datant de l‚Äôann√©e 1986. 

```{r}
#| label: data_import
#| code-fold: false
apples <- readxl::read_excel("data/appleProdFr86.xlsx")
```

{{< include sections/1_desc.qmd >}}

## Statistiques descriptives

{{< include sections/2_stat_desc.qmd >}}

## Analyse exploratoire

{{< include sections/3_acp.qmd >}}

## Fonctions de production

{{< include sections/4_linear_prod_func.qmd >}}

{{< include sections/5_cobb_douglas_prod_func.qmd >}}

{{< include sections/6_quad_prod_func.qmd >}}

{{< include sections/7_translog_prod_func.qmd >}}

{{< include sections/8_sfa_prod_func.qmd >}}

{{< include sections/9_ces_prod_func.qmd >}}

{{< include sections/10_random_forest.qmd >}}

## Fonctions de co√ªt

D'un point de vue √©conom√©trique, l'utilisation d'une fonction de co√ªt
permet d'introduire un mod√®le beaucoup plus complet avec 4 √©quations :
la fonction de co√ªt et les 3 demandes d'inputs, et non pas une seule √©quation comme
lorsqu'on utilise une fonction de production.

> Une fonction de co√ªt repr√©sente la relation entre les quantit√©s des diff√©rents facteurs de production utilis√©s (ici `qCap`, `qLab`, `qMat`) et le co√ªt total de production (ici `vCap + vLab + vMat`).

En fait, celle-ci donne le co√ªt minimum associ√© √† un niveau d'output et de prix des inputs, en tenant compte de la technologie disponible.

Calculons d'abord le co√ªt total des inputs, c'est √† dire $v_{Cap} + v_{Lab} + v_{Mat}$.

```{r}
#| label: total_cost
#| code-fold: false
apples <- apples |> mutate(cost = vCap + vLab + vMat)
```

{{< include sections/11_cost_functions.qmd >}}

## Profit des producteurs

### Analyse du profit

$$
\pi = (p_{Out} \cdot q_{Out}) - \overbrace{(v_{Cap} + v_{Lab} + v_{Mat})}^{cost}
$$

```{r}
#| label: profit_formula
#| code-fold: false
apples <- apples |> mutate(profit = (pOut * qOut) - cost)
```

::: {.callout-note}

- Les producteurs dont le profit d√©passe 5 millions sont mis en surbrillance [**verte**]{style="color:darkgreen;"}.
- Les producteurs dont le profit est n√©gatif sont en mis subrillance [**rouge**]{style="color:darkred;"}.

:::

```{r}
#| label: profit_tbl
#| echo: false

profit_tbl <- apples |>
    select(pOut, qOut, cost, profit) |>
    rowid_to_column() |>
    arrange(desc(profit)) |>
    select(rowid, profit)

profit_tbl |>
    gt() |>
    cols_label(
        rowid = md("$N$"),
        profit = md("$\\pi$")
    ) |>
    fmt_number(-rowid, suffixing = TRUE) |>
    fmt_integer(rowid, pattern = "Producteur {x}") |>
    cols_align("center") |>
    tab_header(
        title = md("**Profit des producteurs de pommes**")
    ) |>
    data_color(
        columns = profit,
        rows = profit < 0,
        palette = "darkred",
        alpha = 0.75
    ) |>
    data_color(
        columns = profit,
        rows = profit > 5000000,
        palette = "darkgreen",
        alpha = 0.75
    ) |>
    tab_options(
        table.background.color = bg_color
    ) |>
    opt_interactive(use_highlight = TRUE)
```

```{r}
#| label: profit_metrics
#| echo: false

negative_profit <- profit_tbl |>
    filter(profit < 0) |>
    count() |>
    pull()

five_million_profit <- profit_tbl |>
    filter(profit > 5000000) |>
    count() |>
    pull()

min_profit <- profit_tbl |> filter(profit == min(profit))
max_profit <- profit_tbl |> filter(profit == max(profit))

avg_profit <- profit_tbl |>
    summarise(mean = mean(profit)) |>
    pull() |>
    round(2)

median_profit <- profit_tbl |>
    summarise(median = median(profit)) |>
    pull() |>
    round(2)

min_producer <- min_profit |>
    select(rowid) |>
    pull()
max_producer <- max_profit |>
    select(rowid) |>
    pull()
```

**On remarque tout de m√™me qu'il y a d'importantes diff√©rences de profits entre les producteurs.** 

En effet, il y a **`r negative_profit`** producteurs de pommes ayant un profit n√©gatif et **`r five_million_profit`** producteurs dont le profit est sup√©rieur √† 5 millions.

- Le profit moyen $\bar\pi$ quant √† lui est de **`r format(avg_profit, scientific = F)`**.

- Le profit m√©dian $\tilde\pi$, bien inf√©rieur, est de **`r format(median_profit, scientific = F)`**.

Enfin, le **producteur `r min_producer`** poss√®de le profit le moins elev√© du panel et le **producteur `r max_producer`** poss√®de le profit le plus elev√© *(voir le tableau ci-dessus)*.

```{r}
#| label: pi_median
#| echo: false
pi_med_adv <- apples |>
    filter(adv == 1) |>
    pull(profit) |>
    median()

pi_med_noadv <- apples |>
    filter(adv == 0) |>
    pull(profit) |>
    median()
```

On remarque quelque chose d'int√©ressant : la m√©diane des profits des producteurs recevant des conseils est bien plus √©lev√©e (**`r format(pi_med_adv, scientific = F)`**) que ceux ne recevant pas de conseils (**`r format(pi_med_noadv, scientific = F)`**)

```{r}
#| label: pi_advice
#| echo: false
#| fig-align: center
apples |>
    select(pOut, qOut, cost, profit, adv_chr) |>
    ggplot() +
    aes(y = profit, x = adv_chr, fill = adv_chr) +
    geom_boxplot() +
    labs(
        title = "Profit en fonction de conseils ou non.",
        y = expression(pi),
        x = "",
        caption = "Auteurs : @Corentin DUCLOUX, @Guillaume DEVANT, 2024 "
    ) +
    scale_y_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    ) +
    theme(legend.position = "none")
```

> Nous pouvons aussi nous int√©resser au nuage de points des profits et des quantit√©s produites.

```{r}
#| label: qout_profit_corr
#| echo: false
qout_profit_corr <- apples |>
    select(qOut, profit) |>
    cor() |>
    as_tibble() |>
    select(profit) |>
    slice(1) |>
    pull() |>
    round(2)
```

*Note* : Etant donn√© la corr√©lation de **`r qout_profit_corr`** entre `profit` et `qOut`, on s'attend √©videmment √† ce que produire plus de pommes entra√Æne n√©cessairement un acroissement du profit. 

```{r}
#| label: profit_qout
#| fig-align: center
#| echo: false
ggplot(apples, aes(x = qOut, y = profit, color = efficiency)) +
    geom_point() +
    scale_y_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    ) +
    scale_x_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    ) +
    scale_color_continuous(trans = "reverse") +
    labs(
        x = expression(q[Out]),
        y = expression(pi),
        title = "Relation entre le profit et l'output",
        subtitle = "Les points les plus fonc√©s repr√©sentent les producteurs les plus efficaces techniquement (SFA)",
        caption = "Auteurs : @Corentin DUCLOUX, @Guillaume DEVANT, 2024 "
    ) +
    theme(legend.position = "none")
```

On peut √©galement tracer les courbes correspondant √† la recette totale (RT) et au co√ªt total (CT). La relation entre RT et la quantit√© produite est estim√©e de mani√®re `quadratique` alors que la relation entre le CT et la quantit√© produite est une relation `lin√©aire`. Les points correspondent aux donn√©es r√©elles. 

```{r}
#| label: pi_study_lines
#| echo: false
#| fig-align: center
qOut_MAX <- 2000000

etude <- apples |>
    filter(qOut < qOut_MAX) |>
    select(pOut, qOut, cost, profit, adv_chr) |>
    mutate(RT = pOut * qOut)

quadra_rt <- lm(RT ~ qOut + I(qOut^2), etude)
quadra_rt_coefs <- quadra_rt$coefficients
linear_ct <- lm(cost ~ qOut, etude)
linear_ct_coefs <- linear_ct$coefficients

qOut <- seq(0, qOut_MAX, by = 1000)
func_RT <- quadra_rt_coefs[1] + quadra_rt_coefs[2] * qOut + quadra_rt_coefs[3] * qOut^2
func_CT <- linear_ct_coefs[1] + linear_ct_coefs[2] * qOut

datoum <- data.frame(qOut = qOut, func_RT = func_RT, func_CT = func_CT)

ggplot() +
    geom_line(data = datoum, aes(x = qOut, y = func_RT), color = "red", lwd = 1) +
    geom_line(data = datoum, aes(x = qOut, y = func_CT), color = "blue", lwd = 1) +
    geom_point(data = etude, aes(x = qOut, y = RT), alpha = 0.1, color = "red") +
    geom_point(data = etude, aes(x = qOut, y = cost), alpha = 0.1, color = "blue") +
    geom_ribbon(
        data = subset(datoum, func_RT > func_CT),
        aes(x = qOut, ymin = func_CT, ymax = func_RT),
        fill = "black", alpha = 0.1
    ) +
    labs(
        x = expression(q[Out]), y = "RT & CT", title = "Etude du profit",
        caption = "Auteurs : @Corentin DUCLOUX, @Guillaume DEVANT, 2024 "
    ) +
    annotate(
        geom = "text", x = qOut_MAX * 0.95, y = max(func_CT) * 2,
        label = "Profit", color = "black", fontface = "bold"
    ) +
    annotate(
        geom = "text", x = qOut_MAX * 0.95, y = max(func_RT) * 1.05,
        label = "Recette Totale", color = "red"
    ) +
    annotate(
        geom = "text", x = qOut_MAX * 0.95, y = max(func_CT) * 0.65,
        label = "Co√ªt Total", color = "blue"
    ) +
    scale_y_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    ) +
    scale_x_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    )
```

On constate que le profit est dans un premier temps n√©gatif puis devient positif (partie gris√©e). Ce petit mod√®le permet de constater √† partir de quelle quantit√© produite un arboriculteur commence √† faire du profit.

*On remarque aussi visuellement les rendements d'√©chelle croissants*

### Fonction de profit Quadratique Normalis√©e Sym√©trique

La fonction a √©t√© introduite par @kohli1993. Cette forme flexible permet d'estimer les profits et d'imposer globalement des conditions sur la courbure requise (si n√©cessaire d‚Äôimposer la convexit√© des prix).

::: {.callout-tip}

## Forme de la fonction 

$$
\pi(p) = \sum^4_{i=1}\alpha_i p_i + \frac{1}{2}\left(\sum^4_{i=1}\theta_i p_i\right)^{-1}\sum^4_{i=1}\sum^4_{j=1}\beta_{ij}p_i p_j
$$

Avec $\pi$ le profit, $p_i$ le prix des netputs, $Œ∏_i$ le poids des prix pour la normalisation et $Œ±_i$, $Œ≤_{ij}$ les coefficients √† estimer.

*Note* : la notation *netput* correspond au cas o√π l'output est trait√© comme une quantit√© positive et les inputs sont trait√©s comme n√©gatifs.

:::

- Transformons donc les inputs `qCap`, `qLab` et `qMat` pr√©alablement.

```{r}
#| label: netput_transformation
#| code-fold: false
apples_snq <- apples |>
    select(N, pOut, pCap, pLab, pMat, qOut, qCap, qLab, qMat) |>
    mutate(qCap = -qCap, qLab = -qLab, qMat = -qMat)
```

- Nous pouvons maintenant estimer la fonction. A noter cependant que la premi√®re estimation de la fonction de profit n'est pas convexe dans les prix des netputs ! La commande `snqProfitImposeConvexity` permet de r√©gler ce probl√®me.

```{r}
#| label: snq_experimentation
#| code-fold: false
snq_func <- snqProfitEst(
    priceNames = c("pOut", "pCap", "pLab", "pMat"),
    quantNames = c("qOut", "qCap", "qLab", "qMat"),
    form = 0,
    data = apples_snq
)

snq_func_convex <- snqProfitImposeConvexity(snq_func, stErMethod = "coefSim", nRep = 50)
```

```{r}
#| label: snq_table
#| echo: false

residuals_profit <- apples |>
    select(profit) |>
    pull() - predict(snq_func_convex)$profit

r2_profit_convex <- miscTools::rSquared(apples$profit, residuals_profit)[, 1]

r2_values_profit_convex <- snq_func_convex$r2

r2_qOut <- r2_values_profit_convex |>
    as.data.frame() |>
    rownames_to_column(var = "variable") |>
    as_tibble() |>
    filter(variable == "qOut") |>
    pull()

r2_qCap <- r2_values_profit_convex |>
    as.data.frame() |>
    rownames_to_column(var = "variable") |>
    as_tibble() |>
    filter(variable == "qCap") |>
    pull()

r2_qLab <- r2_values_profit_convex |>
    as.data.frame() |>
    rownames_to_column(var = "variable") |>
    as_tibble() |>
    filter(variable == "qLab") |>
    pull()

r2_qMat <- r2_values_profit_convex |>
    as.data.frame() |>
    rownames_to_column(var = "variable") |>
    as_tibble() |>
    filter(variable == "qMat") |>
    pull()

rownames_to_column(
    snq_func_convex$coef$stats |> as.data.frame(),
    var = "coefs"
) |>
    mutate(
        coefs = glue::glue("$\\{stringr::str_replace(coefs, ' ', '_{')}}}$"),
        signif = makestars(prob)
    ) |>
    as_tibble() |>
    janitor::clean_names() |>
    select(coefs, value, std_err, signif) |>
    gt(rowname_col = "coefs") |>
    fmt_markdown(c(coefs, signif)) |>
    fmt_number(value, suffixing = TRUE) |>
    fmt_number(
        std_err,
        suffixing = TRUE,
        pattern = "+/- {x}"
    ) |>
    cols_label(
        value = md("**Coefficients**"),
        std_err = md("**Ecart Type**"),
        signif = md("**Significativit√©**")
    ) |>
    tab_header(
        title = md("**Fonction de profit SNQ**"),
        subtitle = md("Variable d√©pendante : `profit`")
    ) |>
    tab_footnote(
        md(
            glue::glue("$R^2$ ‚Äî `profit` $=$ {round(r2_profit_convex, 3)}")
        )
    ) |>
    tab_footnote(
        md(
            glue::glue("$R^2$ ‚Äî `qOut` $=$ {round(r2_qOut , 3)}")
        )
    ) |>
    tab_footnote(
        md(
            glue::glue("$R^2$ ‚Äî `qCap` $=$ {round(r2_qCap , 3)}")
        )
    ) |>
    tab_footnote(
        md(
            glue::glue("$R^2$ ‚Äî `qLab` $=$ {round(r2_qLab , 3)}")
        )
    ) |>
    tab_footnote(
        md(
            glue::glue("$R^2$ ‚Äî `qMat` $=$ {round(r2_qMat , 3)}")
        )
    ) |>
    tab_options(
        table.background.color = bg_color
    )
```

#### Elasticit√©s-prix

::: {.callout-note}

## D√©finition

Une *√©lasticit√©-prix* est d√©finie par : 

$$
E_{ij} = \dfrac{\dfrac{\partial q_i}{q_i}}{\dfrac{\partial p_j}{p_j}} = \dfrac{\partial q_i}{\partial p_j} \cdot \dfrac{p_j}{q_i}
$$

:::


On peut facilement obtenir les estimations des √©lasticit√©s-prix aux prix moyens et aux quantit√©s moyennes. 

```{r}
#| label: elas
#| echo: false
snq_func_convex$ela$ela |>
    as.data.frame() |>
    rownames_to_column(var = "quantities") |>
    as_tibble() |>
    mutate(
        quantities = case_when(
            quantities == "qOut" ~ "$q_{Out}$",
            quantities == "qCap" ~ "$q_{Cap}$",
            quantities == "qLab" ~ "$q_{Lab}$",
            quantities == "qMat" ~ "$q_{Mat}$"
        )
    ) |>
    gt(rowname_col = "quantities") |>
    fmt_number(c(-quantities), decimals = 3) |>
    fmt_markdown(quantities) |>
    cols_label(
        pOut = md("$p_{Out}$"),
        pCap = md("$p_{Cap}$"),
        pLab = md("$p_{Lab}$"),
        pMat = md("$p_{Mat}$")
    ) |>
    tab_header(
        title = md("**Elasticit√©s-prix des netputs**"),
        subtitle = md("")
    ) |>
    tab_options(
        table.background.color = bg_color
    )
```

- Par exemple, $E_\left\{{q_{Cap} \: ; \: p_{Cap}}\right\} = - 0.327$, c'est √† dire que quand le prix du capital augmente de 1%, la quantit√© de capital va diminuer de  0.327%.

- D'autre part, pour $E_\left\{{q_{Lab} \: ; \: p_{Cap}}\right\} = 0.1$, on voit que quand le prix du capital augmente de 1%, la quantit√© de travail va augmenter de 0.1%.

> **Conclusion** : On voit bien √† travers ce tableau l'ensemble des substitutions qui peuvent s'effectuer

### Analyse du co√ªt moyen

Le co√ªt moyen repr√©sente le co√ªt total (`cost`) de la firme divis√© par son niveau d'output (`qOut`).

```{r}
#| label: mean_cost
#| code-fold: false
apples <- apples |> mutate(CM = cost / qOut)
```

```{r}
#| label: mean_cost_study
#| echo: false
#| fig-align: center
qOut_MAX <- 8000000

df_cost <- bind_cols(margCosts, apples |> select(pOut, qOut, cost)) |>
    filter(marg_cost < 10) |>
    filter(qOut < qOut_MAX) |>
    mutate(avg_cost = cost / qOut) |>
    mutate(diff_cost = avg_cost - marg_cost)

cube_ac <- lm(avg_cost ~ qOut + I(qOut^2) + I(qOut^3) + I(qOut^4) + I(qOut^5) + I(qOut^6) + I(qOut^7) + I(qOut^8), df_cost)
coefs <- cube_ac$coefficients

qOut <- seq(0, qOut_MAX, by = 1000)

func_AC <- coefs[1] + coefs[2] * qOut + coefs[3] * qOut^2 + coefs[4] * qOut^3 + coefs[5] * qOut^4 + coefs[6] * qOut^5 + coefs[7] * qOut^6 + coefs[8] * qOut^7 + coefs[9] * qOut^8
datoum2 <- data.frame(qOut = qOut, func_AC = func_AC)
ggplot() +
    geom_line(data = datoum2, aes(x = qOut, y = func_AC), color = "purple", lwd = 1) +
    geom_point(data = df_cost, aes(x = qOut, y = avg_cost), alpha = 0.1, color = "purple") +
    labs(
        x = expression(q[Out]), y = "Co√ªt Moyen", title = "Co√ªt moyen en fonction de qOut",
        caption = "Auteurs : @Corentin DUCLOUX, @Guillaume DEVANT, 2024 "
    ) +
    scale_x_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    )
```

- On constate que le co√ªt moyen diminue consid√©rablement au d√©but de la production, puis se stabilise √† mesure que la quantit√© produite augmente.

***

On peut ensuite analyser la diff√©rence entre le co√ªt marginal et le co√ªt moyen (le co√ªt marginal que nous utilisons est celui calcul√© en Section 5.4.1).

```{r}
#| label: mean_marginal_cost
#| echo: false
#| fig-align: center
ggplot() +
    geom_point(
        data = df_cost, aes(x = qOut, y = diff_cost),
        color = "purple4",
        alpha = 0.5
    ) +
    labs(
        x = expression(q[Out]), y = "Co√ªt Moyen - Co√ªt Marginal",
        title = "Co√ªt Moyen - Co√ªt Marginal en fonction de qOut",
        caption = "Auteurs : @Corentin DUCLOUX, @Guillaume DEVANT, 2024 "
    ) +
    scale_x_continuous(
        labels = scales::label_number(
            scale_cut = scales::cut_short_scale()
        )
    ) +
    geom_hline(yintercept = 0, linetype = "dashed", color = "red")
```

Selon @harnay, toutes les valeurs n√©gatives d√©montrent donc que les producteurs ont un co√ªt marginal croissant, tandis que si la valeur est positive sur ce graphe, cela signifie que le producteur a un co√ªt marginal d√©croissant. On constate que la majorit√© des producteurs ont un co√ªt marginal d√©croissant.

## Conclusion

L'utilisation de l'√©conom√©trie pour √©tudier la production, les co√ªts et le profit permet d'apporter un cadre particuli√®rement pertinent pour analyser les facteurs utilis√©s dans la production des pommes. On a notamment constat√© que, bien qu'√©l√©mentaire, la fonction *Cobb-Douglas* fournit g√©n√©ralement beaucoup plus d'informations qu'une fonction lin√©aire ou quadratique, en √©tant moins complexe qu'une fonction *Translog*, g√©n√©ralement plus difficile √† interpr√©ter et √† utiliser en raison du grand nombre de coefficients impliqu√©s, pour des r√©sultats pas toujours tr√®s pertinents. De plus, dans les cas o√π l'on rencontre de l'inefficacit√©, on peut obtenir de meilleurs r√©sultats avec un mod√®le *SFA*, que nous avons notamment utilis√© pour estimer la production. Dans les faits, quelles que soient les variables √©tudi√©es, on ne peut pas affirmer qu'une fonction est meilleure qu'une autre. Certaines permettent d'estimer les **co√ªts marginaux** *(Translog)*, d'autres les **productivit√©s marginales** *(Cobb-Douglas, Quadratique, Translog)*, les **√©lasticit√©s de substitutions** *(CES)* ou encore les **√©lasticit√©s-prix** *(SNQP)*. C'est pourquoi nous pensons que dans le cas o√π l'on souhaite √©tudier les co√ªts, la productionou encore le profit, il est n√©cessaire d'examiner tous ces outils et de croiser les r√©sultats pour avoir une id√©e g√©n√©rale du sujet que l'on traite.

[ {{< fa arrow-up-from-bracket >}} Haut de la page](#introduction){.btn .btn-outline-primary .btn role="button" .center}